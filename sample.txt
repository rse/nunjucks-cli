##
##  Composefile -- Docker Compose Configuration
##

{% set WITH_SRV_NAME       = default(WITH_SRV_NAME,   "ASE-K3S", "string") %}
{% set WITH_SRV_DESC       = default(WITH_SRV_DESC,   "K3S Kubernetes Application Server (ASE)", "string") %}

{% set WITH_URL_SCHEME     = default(WITH_URL_SCHEME, DOCKER_STACK_URL_SCHEME, "string") %}
{% set WITH_URL_HOST       = default(WITH_URL_HOST,   DOCKER_STACK_URL_HOST,   "string") %}
{% set WITH_URL_MODE       = default(WITH_URL_MODE,   DOCKER_STACK_URL_MODE,   "string") %}
{% set WITH_URL_PATH       = default(WITH_URL_PATH,   DOCKER_STACK_URL_PATH,   "string") %}

{% set WITH_WORKERS        = default(WITH_WORKERS,        3,        "int")  %}
{% set WITH_SMI            = default(WITH_SMI,            "no",     "bool") %}
{% set WITH_FAAS           = default(WITH_FAAS,           "no",     "bool") %}

version: "3.7"

services:

    #   the K3S Proxy service
    ase-k3s-proxy:
        container_name: ase-k3s-proxy
        image:          docker.msg.team/ps/std-nginx:1.19.3-20200930
        init:           true
        restart:        always
        environment:
            PROXY_SRV_NAME:    {{ WITH_SRV_NAME   }}
            PROXY_SRV_DESC:    {{ WITH_SRV_DESC   }}
            PROXY_URL_SCHEME:  {{ WITH_URL_SCHEME }}
            PROXY_URL_HOST:    {{ WITH_URL_HOST   }}
            PROXY_URL_MODE:    {{ WITH_URL_MODE   }}
            PROXY_URL_PATH:    {{ WITH_URL_PATH   }}
            PROXY_DST_PATH:    {{ WITH_URL_PATH   }}
        volumes:
            - ./nginx.conf:/conf/nginx.conf:ro
        networks:
            proxy:
            ase-k3s: { aliases: [ proxy ] }
        depends_on:
            - ase-k3s-server

    #   the K3S Server service
    ase-k3s-server:
        hostname:       node0
        container_name: ase-k3s-server
        image:          docker.msg.team/ps/ase-k3s:1.22.4-20211130
        init:           true
        command: >-
            server
            --bind-address=0.0.0.0
            --https-listen-port=6443
            --kube-apiserver-arg=external-hostname={{ WITH_URL_HOST }}
            --data-dir=/data/k3s
        restart:        always
        privileged:     true
        environment:
            K3S_PROXY_URL_MODE:      {{ WITH_URL_MODE }}
            K3S_CLUSTER_SECRET:      "{{ WITH_CLUSTER_SECRET }}"
            K3S_NODE_NAME:           node0
            K3S_KUBECONFIG_OUTPUT:   /conf/kubeconfig.yaml
            K3S_KUBECONFIG_MODE:     666
            KUBECONFIG_SERVER_URL:   "{{ WITH_URL_SCHEME }}://{{ WITH_URL_HOST }}{{ WITH_URL_PATH }}"
            K3S_TOKEN:               "foobar"
        ports:
            - 6443:6443
        volumes:
            - ase-k3s-server:/data
            - ./manifest-1-root.yaml:/data/k3s/server/manifests/ase-k3s-1-root.yaml
            {% if WITH_WORKERS > 0 %}
            - ./local-storage.yaml.skip:/data/k3s/server/manifests/local-storage.yaml.skip
            - ./manifest-2-csi.yaml:/data/k3s/server/manifests/ase-k3s-2-csi.yaml
            {% endif %}
            {% if WITH_SMI %}
            - ./manifest-3-smi.yaml:/data/k3s/server/manifests/ase-k3s-3-smi.yaml
            {% endif %}
            {% if WITH_FAAS %}
            - ./manifest-4-faas.yaml:/data/k3s/server/manifests/ase-k3s-4-kubeless.yaml
            {% endif %}
            - ./manifest-5-ui.yaml:/data/k3s/server/manifests/ase-k3s-5-ui.yaml
            - ./ps-kubernetes-dashboard-0.0.0.tgz:/data/k3s/server/static/charts/ps-kubernetes-dashboard-0.0.0.tgz
        networks:
            ase-k3s: { aliases: [ node0, api ] }
        {% if WITH_WORKERS > 0 %}
        depends_on:
            - ase-k3s-storage
        {% endif %}

    {% if WITH_WORKERS > 0 %}

    #   the K3S Node #1
    {% for i in range(1, WITH_WORKERS + 1) %}
    ase-k3s-node-{{ i }}:
        hostname:       node{{ i }}
        container_name: ase-k3s-node-{{ i }}
        image:          docker.msg.team/ps/ase-k3s:1.22.4-20211130
        init:           true
        command: >-
            agent
            --data-dir=/data/k3s
        restart:        always
        privileged:     true
        environment:
            K3S_URL:                 https://api:6443
            K3S_NODE_NAME:           node{{ i }}
            K3S_TOKEN_FILE:          /data-server/k3s/server/token
        volumes:
            - ase-k3s-node-{{ i }}:/data
            - ase-k3s-server:/data-server
        networks:
            ase-k3s: { aliases: [ node{{ i }} ] }
        depends_on:
            - ase-k3s-server
            - ase-k3s-storage
    {% endfor %}

    #   the NFS storage service
    ase-k3s-storage:
        hostname:       nfs
        container_name: ase-k3s-storage
        image:          docker.msg.team/ps/std-nfs:12-20200111
        init:           true
        restart:        always
        privileged:     true
        environment:
            SHARED_DIRECTORY:        /data/k3s
        volumes:
            - ase-k3s-storage:/data
        networks:
            ase-k3s: { aliases: [ nfs ] }

    {% endif %}

volumes:
    ase-k3s-server:
        name: ase-k3s-server
    {% if WITH_WORKERS > 0 %}
    {% for i in range(1, WITH_WORKERS + 1) %}
    ase-k3s-node-{{ i }}:
        name: ase-k3s-node-{{ i }}
    {% endfor %}
    ase-k3s-storage:
        name: ase-k3s-storage
    {% endif %}

networks:
    proxy:
        name: proxy
        external: true
    ase-k3s:
        name: ase-k3s
        driver: bridge

